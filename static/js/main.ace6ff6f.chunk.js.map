{"version":3,"sources":["ModuleStyles/PhoneBook.module.css","redux/contactActions.js","Components/ContactForm.jsx","Components/Filter.jsx","Components/ContactsList.jsx","App.js","redux/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","contact","id","uuidv4","delContact","doFilter","filter","toast","configure","ContactForm","state","handleChange","e","setState","target","value","handleChangeNum","notifiation","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleSubmit","preventDefault","contacts","props","find","toLowerCase","this","className","style","submitForm","onSubmit","details","type","onChange","mask","addContactBtn","Component","mDPT","taskActions","connect","items","mapDispatchToProps","handleFilter","searchForm","formDescription","searchInput","mDTP","deleteContact","item","includes","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","contactName","contactDetails","contactPhone","removeButton","onClick","App","prevProp","prevState","localStorage","setItem","JSON","stringify","console","log","phonebook","bg","appear","in","unmountOnExit","length","createReducer","itemsInStor","parse","getItem","itemsInStorage","contactAction","action","info","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ace6ff6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"PhoneBook_phonebook__2DcGW\",\"details\":\"PhoneBook_details__3ehCp\",\"addContactBtn\":\"PhoneBook_addContactBtn__Mo0pn\",\"submitForm\":\"PhoneBook_submitForm__2xI-m\",\"contactDetails\":\"PhoneBook_contactDetails__2Lcd5\",\"contactName\":\"PhoneBook_contactName__33SH9\",\"removeButton\":\"PhoneBook_removeButton__Do9_U\",\"formDescription\":\"PhoneBook_formDescription__3bOPh\",\"searchForm\":\"PhoneBook_searchForm__aoNcE\"};","import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contact/add\", (name, number) => ({\n  payload: {\n    contact: {\n      name: name,\n      id: uuidv4(),\n      number: number,\n    },\n  },\n}));\n// const addContact = (name, number) => ({\n//   type: \"contact/add\",\n//   payload: {\n//     contact: {\n//       name: name,\n//       id: uuidv4(),\n//       number: number,\n//     },\n//   },\n// });\n\nconst delContact = createAction(\"contact/delete\", (id) => ({\n  payload: { id },\n}));\n// const delContact = (id) => ({\n//   type: \"contact/delete\",\n//   payload: { id },\n// });\n\nconst doFilter = createAction(\"contact/filter\", (filter) => ({\n  payload: { filter },\n}));\n// const doFilter = (filter) => ({\n//   type: \"contact/filter\",\n//   payload: { filter },\n// });\n\nexport default { addContact, doFilter, delContact };\n","import React, { Component } from \"react\";\nimport style from \"../ModuleStyles/PhoneBook.module.css\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport InputMask from \"react-input-mask\";\nimport { connect } from \"react-redux\";\nimport taskActions from \"../redux/contactActions\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nclass ContactForm extends Component {\n  state = { name: \"\", number: \"\" };\n  handleChange = (e) => {\n    this.setState({ name: e.target.value });\n  };\n  handleChangeNum = (e) => {\n    this.setState({ number: e.target.value });\n  };\n  notifiation = () => {\n    toast.error(`${this.state.name} is already in list!`, {\n      position: \"top-center\",\n      autoClose: 2500,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const contacts = this.props.contacts;\n    const { name } = this.state;\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      this.notifiation();\n    } else {\n      this.setState({ name: \"\", number: \"\" });\n      this.props.addContact(this.state.name, this.state.number);\n    }\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={style.submitForm} onSubmit={this.handleSubmit}>\n        <span className={style.details}>Name: </span>\n        <input type=\"text\" value={name} onChange={this.handleChange}></input>\n        <br></br>\n        <span className={style.details}>Phone:</span>\n        <InputMask\n          mask=\"(999)-999-99-99\"\n          type=\"text\"\n          value={number}\n          onChange={this.handleChangeNum}\n        ></InputMask>\n\n        <br></br>\n        <button\n          className={style.addContactBtn}\n          onSubmit={this.handleSubmit}\n          type=\"submit\"\n        >\n          {name ? `Add ${name}` : \"Add Contact\"}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mDPT = {\n  addContact: taskActions.addContact,\n};\nconst mSTP = (state) => ({\n  contacts: state.contacts.items,\n});\n\nexport default connect(mSTP, mDPT)(ContactForm);\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n  addContact: PropTypes.func,\n};\n","import React from \"react\";\nimport style from \"../ModuleStyles/PhoneBook.module.css\";\nimport PropTypes from \"prop-types\";\nimport taskActions from \"../redux/contactActions\";\nimport { connect } from \"react-redux\";\n\nfunction Filter({ value, handleFilter }) {\n  return (\n    <form className={style.searchForm}>\n      <span className={style.formDescription}>Find contacts by name</span>\n      <input\n        className={style.searchInput}\n        onChange={(e) => handleFilter(e.target.value)}\n        value={value}\n        type=\"text\"\n      ></input>\n    </form>\n  );\n}\nconst mSTP = (state) => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = {\n  handleFilter: taskActions.doFilter,\n};\n\nexport default connect(mSTP, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  handleFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\n","import React from \"react\";\nimport style from \"../ModuleStyles/PhoneBook.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport taskActions from \"../redux/contactActions\";\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <TransitionGroup component=\"ul\">\n      {contacts.map(({ name, id, number }) => (\n        <CSSTransition key={id} timeout={300} classNames=\"items\">\n          <li key={id}>\n            <span className={`${style.contactName} ${style.contactDetails}`}>\n              {name + \":\"}\n            </span>\n            <span className={`${style.contactPhone} ${style.contactDetails}`}>\n              {number}\n            </span>\n            <button\n              className={style.removeButton}\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts;\n  const visibleContacts = items.filter((item) =>\n    item.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return { contacts: visibleContacts };\n};\nconst mDTP = {\n  deleteContact: taskActions.delContact,\n};\nexport default connect(mapStateToProps, mDTP)(ContactList);\n\nContactList.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n  onRemove: PropTypes.func,\n};\n","import React, { Component } from \"react\";\nimport ContactForm from \"./Components/ContactForm.jsx\";\nimport Filter from \"./Components/Filter\";\nimport ContactItem from \"./Components/ContactsList.jsx\";\nimport style from \"./ModuleStyles/PhoneBook.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./ModuleStyles/animations.css\";\nimport ParticlesBg from \"particles-bg\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  componentDidUpdate(prevProp, prevState) {\n    if (prevProp.contacts !== this.props.contacts) {\n      localStorage.setItem(\"contact\", JSON.stringify(this.props.contacts));\n    }\n  }\n  render() {\n    console.log(this.props.contacts);\n    const { contacts } = this.props;\n    return (\n      <div className={style.phonebook}>\n        <ParticlesBg type=\"circle\" bg={true}></ParticlesBg>\n        <CSSTransition\n          appear={true}\n          in={true}\n          timeout={2000}\n          unmountOnExit\n          classNames=\"logo\"\n        >\n          <h2>Phonebook</h2>\n        </CSSTransition>\n        <ContactForm />\n        <h2>Contacts</h2>\n        {contacts.length > 1 && <Filter />}\n\n        <ContactItem />\n      </div>\n    );\n  }\n}\nconst mSTP = (state) => ({\n  contacts: state.contacts.items,\n});\n\nexport default connect(mSTP)(App);\n","import { combineReducers } from \"redux\";\nimport { toast } from \"react-toastify\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactAction from \"./contactActions\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\nconst notifiation = () => {\n  toast.info(`First, you have to enter the name!`, {\n    position: \"top-center\",\n    autoClose: 2500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nconst itemsInStorage = () => {\n  const itemsInStor = JSON.parse(localStorage.getItem(\"contact\"));\n  if (itemsInStor) {\n    return itemsInStor;\n  } else {\n    return [];\n  }\n};\nconst addContact = (state, action) => {\n  if (action.payload.contact.name.length >= 1) {\n    return [...state, action.payload.contact];\n  } else {\n    notifiation();\n  }\n};\nconst removeContact = (state, action) =>\n  state.filter((items) => items.id !== action.payload.id);\n\nconst items = createReducer(itemsInStorage(), {\n  [contactAction.addContact]: addContact,\n  [contactAction.delContact]: removeContact,\n});\n// const items = (state = itemsInStorage(), { type, payload }) => {\n//   switch (type) {\n//     case \"contact/add\":\n//       {\n//         if (payload.contact.name.length >= 1) {\n//           return [...state, payload.contact];\n//         } else {\n//           notifiation();\n//         }\n//       }\n//       break;\n//     case \"contact/delete\":\n//       return state.filter((item) => item.id !== payload.id);\n\n//     default:\n//       return state;\n//   }\n// };\nconst setFilter = (state, action) => action.payload.filter;\n\nconst filter = createReducer(\"\", {\n  [contactAction.doFilter]: setFilter,\n});\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case \"contact/filter\":\n//       return payload.filter;\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import contactsReducer from \"../redux/contactsReducer\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nconst store = configureStore({\n  reducer: { contacts: contactsReducer },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}